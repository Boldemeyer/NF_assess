dpi = 600
)
options(knitr.kable.NA = '--')
# run this if running chunks directly
# for formatting
library(kableExtra)
library(ggpubr)
# for analysis
library(sf)
library(here)
library(tidyverse)
library(magrittr)
library(ggmap)
library(nngeo)
library(janitor)
library(ggspatial)
library(ggrepel)
theme_set(theme_pubr(x.text.angle = 45,
base_size = 8))
# when knitting to Word, use this
#doc.type <- knitr::opts_knit$get('rmarkdown.pandoc.to')
doc.type<-'docx'
if(doc.type == 'docx') {
options(knitr.table.format = "pandoc")
}
knitr::include_graphics("../figures/hab-capac-fig.png")
# NF Salmon QRF extrapolations
load(here("analysis/data/derived_data/NF_qrf_extrapolations.rda"))
# Project area polygons and 200m layer (with habitat attributes) within project area
load(here("analysis/data/derived_data/NF_spatial.rda"))
# Species domains for the NF salmon manually modified in QGIS with expert knowledge from Jessica Buelow - IDFG
NF_crs = st_crs(4326) # WGS84
NF_sp_domain_sf = st_read(here("analysis/data/raw_data/NF_sp_Domain.gpkg"), quiet = TRUE) %>%
st_transform(NF_crs)
NF_sp_domain_df = NF_sp_domain_sf %>%
st_drop_geometry() %>%
as_tibble()
NF_HUC12_sf = st_read(here("analysis/data/raw_data/watershed_boundary/HUC12/NFSR_HUC12.shp"), quiet = TRUE) %>%
st_transform(NF_crs)
NF_geo_reach_sf = st_read(here("analysis/data/raw_data/Reaches_delineation/Reaches.shp"), quiet = TRUE) %>%
st_transform(NF_crs)
# append correct domains & geomorph reach designations
NF_sum_sf = NF_sum_sf %>%
rename(chnk_strmnt = chnk,
sthd_strmnt = sthd) %>%
left_join(., NF_sp_domain_df %>%
select(c("chnk", "sthd","UniqueID")))
NF_win_sf = NF_win_sf %>%
rename(chnk_strmnt = chnk,
sthd_strmnt = sthd) %>%
left_join(., NF_sp_domain_df %>%
select(c("chnk","sthd","UniqueID")))
NF_redd_sf = NF_redd_sf %>%
rename(chnk_strmnt = chnk,
sthd_strmnt = sthd) %>%
left_join(., NF_sp_domain_df %>%
select(c("chnk","sthd","UniqueID")))
# convert sf objects to tibbles
NF_sum_df = NF_sum_sf %>%
st_drop_geometry() %>%
as_tibble()
NF_win_df = NF_win_sf %>%
st_drop_geometry() %>%
as_tibble()
NF_redd_df = NF_redd_sf %>%
st_drop_geometry() %>%
as_tibble()
params = read_csv(here("../GCM_General/data/LifeHistoryParameters.csv"))
#define target escapement
target.esc = c(625, 625) # Chinook, steelhead; MAT + 25%
n.sim = 5000
set.seed(352)
#Simulate the required abundances by life-stage
#With normal distribution - no stoch for egg:parr, parr:presmolt
reqs = tibble(Sim_number = rep(1:n.sim,2),
Species = c(rep("Chinook",n.sim),rep("Steelhead",n.sim)),
Escapement = c(rep(target.esc[1],n.sim), rep(target.esc[2],n.sim)),
f_ratio = c(rnorm(n.sim, params$Value[1],params$SD[1]),
rnorm(n.sim, params$Value[7],params$SD[7])),
redds_f = c(rnorm(n.sim, params$Value[2],params$SD[2]),
rnorm(n.sim, params$Value[8],params$SD[8])),
fecund = c(rnorm(n.sim, params$Value[3],params$SD[3]),
rnorm(n.sim, params$Value[9],params$SD[9])),
egg_to_parr = c(rep(params$Value[4],n.sim),
rep(params$Value[10],n.sim)),
parr_to_presmolt = c(rep(params$Value[5],n.sim),
rep(params$Value[11],n.sim)),
egg_to_smolt = c(rep(params$Value[6],n.sim),
rep(params$Value[12],n.sim))) %>%
mutate(f_ratio = ifelse(f_ratio < params$Min[1] & Species == "Chinook", params$Min[1],
ifelse(f_ratio > params$Max[1] & Species == "Chinook", params$Max[1],
ifelse(f_ratio < params$Min[7] & Species == "Steelhead", params$Min[7],
ifelse(f_ratio > params$Max[7] & Species == "Steelhead", params$Max[7], f_ratio)))),
redds_f = ifelse(redds_f < params$Min[2] & Species == "Chinook", params$Min[2],
ifelse(redds_f > params$Max[2] & Species == "Chinook", params$Max[2],
ifelse(redds_f < params$Min[8] & Species == "Steelhead", params$Min[8],
ifelse(redds_f > params$Max[8] & Species == "Steelhead", params$Max[8], redds_f)))),
fecund = ifelse(fecund < params$Min[3] & Species == "Chinook", params$Min[3],
ifelse(fecund > params$Max[3] & Species == "Chinook", params$Max[3],
ifelse(fecund < params$Min[9] & Species == "Steelhead", params$Min[9],
ifelse(fecund > params$Max[9] & Species == "Steelhead", params$Max[9], fecund)))),
# egg_to_parr = ifelse(egg_to_parr < params$Min[4] & Species == "Chinook", params$Min[4],
#                  ifelse(egg_to_parr > params$Max[4] & Species == "Chinook", params$Max[4],
#                         ifelse(egg_to_parr < params$Min[9] & Species == "Steelhead", params$Min[9],
#                                ifelse(egg_to_parr > params$Max[9] & Species == "Steelhead", params$Max[9], egg_to_parr)))),
# parr_to_presmolt = ifelse(parr_to_presmolt < params$Min[5] & Species == "Chinook", params$Min[5],
#                  ifelse(parr_to_presmolt > params$Max[5] & Species == "Chinook", params$Max[5],
#                         ifelse(parr_to_presmolt < params$Min[10] & Species == "Steelhead", params$Min[10],
#                                ifelse(parr_to_presmolt > params$Max[10] & Species == "Steelhead", params$Max[10], parr_to_presmolt))))
) %>%
mutate(Female_escapement = Escapement * f_ratio,
Redds = Female_escapement * redds_f,
Eggs = Redds * fecund,
Summer_juv = Eggs * egg_to_parr,
Winter_juv = Summer_juv * parr_to_presmolt,
Smolts = Eggs * egg_to_smolt
)
#With truncated uniform distribution
# reqs = tibble(Sim_number = rep(1:n.sim,2),
#               Species = c(rep("Chinook",n.sim),rep("Steelhead",n.sim)),
#               Escapement = c(rep(target.esc[1],n.sim), rep(target.esc[2],n.sim)),
#               f_ratio = c(runif(n.sim, params$Value[1]-params$SD[1], params$Value[1]+params$SD[1]),
#                           runif(n.sim, params$Value[6]-params$SD[6], params$Value[6]+params$SD[6])),
#               redds_f = c(runif(n.sim, params$Value[2]-params$SD[2], params$Value[2]+params$SD[2]),
#                           runif(n.sim, params$Value[7]-params$SD[7], params$Value[7]+params$SD[7])),
#               fecund = c(runif(n.sim, params$Value[3]-params$SD[3], params$Value[3]+params$SD[3]),
#                           runif(n.sim, params$Value[8]-params$SD[8],                     params$Value[8]+params$SD[8])),
#               egg_to_parr = c(runif(n.sim, params$Value[4], params$Value[4]),
#                           runif(n.sim, params$Value[9], params$Value[9])),
#               parr_to_presmolt = c(runif(n.sim, params$Value[5], params$Value[5]),
#                           runif(n.sim, params$Value[10], params$Value[10]))) %>%
#   mutate(Female_escapement = Escapement * f_ratio,
#          Redds = Female_escapement * redds_f,
#          Eggs = Redds * fecund,
#          Summer_juv = Eggs * egg_to_parr,
#          Winter_juv = Summer_juv * parr_to_presmolt
#            )
#Summarize sim results
reqs_summary = reqs %>%
group_by(Species) %>%
summarize(Mean_Female_esc = mean(Female_escapement),
Female_escapement_se = sd(Female_escapement),
Female_escapement_80L = quantile(Female_escapement, .1),
Female_escapement_80U = quantile(Female_escapement, .9),
Female_escapement_90L = quantile(Female_escapement, 0.05),
Female_escapement_90U = quantile(Female_escapement, 0.95),
Mean_Redds = mean(Redds),
Redds_se = sd(Redds),
Redds_80L = quantile(Redds, .1),
Redds_80U = quantile(Redds, .9),
Redds_90L = quantile(Redds, 0.05),
Redds_90U = quantile(Redds, 0.95),
Mean_Eggs = mean(Eggs),
Eggs_se = sd(Eggs),
Eggs_80L = quantile(Eggs, .1),
Eggs_80U = quantile(Eggs, .9),
Eggs_90L = quantile(Eggs, 0.05),
Eggs_90U = quantile(Eggs, 0.95),
Mean_Summer_juv = mean(Summer_juv),
Summer_juv_se = sd(Summer_juv),
Summer_juv_80L = quantile(Summer_juv, .1),
Summer_juv_80U = quantile(Summer_juv, .9),
Summer_juv_90L = quantile(Summer_juv, 0.05),
Summer_juv_90U = quantile(Summer_juv, 0.95),
Mean_Winter_juv = mean(Winter_juv),
Winter_juv_se = sd(Winter_juv),
Winter_juv_80L = quantile(Winter_juv, .1),
Winter_juv_80U = quantile(Winter_juv, .9),
Winter_juv_90L = quantile(Winter_juv, 0.05),
Winter_juv_90U = quantile(Winter_juv, 0.95),
Mean_Smolts = mean(Smolts),
Smolts_se = sd(Smolts),
Smolts_90L = quantile(Smolts, 0.1),
Smolts_90U = quantile(Smolts, 0.9)
)
reqs_plotdat = reqs %>%
left_join(reqs_summary, by = 'Species')
reddsplot = ggplot(reqs_plotdat)+
geom_density(aes(x=Redds))+
geom_vline(aes(xintercept=Redds_90L), linetype = 'dotted')+
geom_vline(aes(xintercept=Redds_90U), linetype = 'dotted')+
facet_wrap(~Species) +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())
summer_juvsplot = ggplot(reqs_plotdat)+
geom_density(aes(x=Summer_juv))+
geom_vline(aes(xintercept=Summer_juv_90L), linetype = 'dotted')+
geom_vline(aes(xintercept=Summer_juv_90U), linetype = 'dotted')+
facet_wrap(~Species) +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())
winter_juvsplot = ggplot(reqs_plotdat)+
geom_density(aes(x=Winter_juv))+
geom_vline(aes(xintercept=Winter_juv_90L), linetype = 'dotted')+
geom_vline(aes(xintercept=Winter_juv_90U), linetype = 'dotted')+
facet_wrap(~Species) +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())
smoltsplot = ggplot(reqs_plotdat)+
geom_density(aes(x=Smolts))+
geom_vline(aes(xintercept=Smolts_90L), linetype = 'dotted')+
geom_vline(aes(xintercept=Smolts_90U), linetype = 'dotted')+
facet_wrap(~Species) +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())
sar_req = target.esc/reqs_summary$Mean_Smolts
rec_goals = tibble(Species = c("Chinook", "Steelhead"),
Scenario = "CBPTF 2020",
Escapement = target.esc) %>%
inner_join(params %>%
mutate(Parameter = recode(Parameter,
"Female Ratio" = "prop_fem",
"Redds/Female" = "redd_per_fem",
"Fecundity" = "fecund",
"Egg:Parr" = "egg_to_parr",
"Parr:Presmolt" = "parr_to_presmolt",
"Egg:Smolt" = "egg_to_smolt")) %>%
pivot_wider(id_cols = "Species",
names_from = "Parameter",
values_from = "Value")) %>%
mutate(`Female Escapement` = reqs_summary$Mean_Female_esc,
Redds = reqs_summary$Mean_Redds,
Eggs = reqs_summary$Mean_Eggs,
`Summer Juveniles` = reqs_summary$Mean_Summer_juv,
`Winter Juveniles` = reqs_summary$Mean_Winter_juv,
Smolts = reqs_summary$Mean_Smolts) %>%
select(-c(prop_fem:egg_to_smolt)) %>%
pivot_longer(cols = c(Escapement, `Female Escapement`:Smolts),
names_to = "LifeStage",
values_to = "Abundance") %>%
mutate(SE = c(NA,as.numeric(select(reqs_summary, ends_with("se"))[1,]),NA, as.numeric(select(reqs_summary,ends_with("se"))[2,]))) %>%
mutate(`90% CI, lower` = c(NA,as.numeric(select(reqs_summary, ends_with("90L"))[1,]),NA, as.numeric(select(reqs_summary,ends_with("90L"))[2,]))) %>%
mutate(`90% CI, upper` = c(NA,as.numeric(select(reqs_summary, ends_with("90U"))[1,]),NA, as.numeric(select(reqs_summary,ends_with("90U"))[2,])))
params %>%
select(-Min, -Max) %>%
kable(booktabs = T,
digits = 3,
align = "lcccc",
format.args = list(big.mark = ",",
drop0trailing = T),
caption = "Life history parameters for the generalized capacity model.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
rec_goals %>%
mutate(`90% CI` = paste0("(",round(`90% CI, lower`,0),"-",round(`90% CI, upper`,0),")")) %>%
select(-`90% CI, lower`, -`90% CI, upper`) %>%
kable(booktabs = T,
digits = 0,
align = "ccccc",
format.args = list(big.mark = ",",
drop0trailing = T),
col.names = c("Species", "Scenario","Life-stage","Abundance", "Abundance SE", "90% CI"),
caption = "Life-stage specific habitat capacity requirement estimates necessary to achieve given escapement recovery goals.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
load(here("analysis/data/raw_data/QRF_new_hab_cov_tbl.rda"))
QRF_new_hab_cov_tbl %>%
select(-Covariate) %>%
kable(booktabs = T,
align = "ccccccccl",
caption = "Habitat covariates and their descriptions used in each of the QRF capacity models. Numbers indicate where each metric ranked in relative importance for each model. Dots indicate a metric was not used for a given model.") %>%
kable_styling(position = "center",
bootstrap_options = c("striped", "condensed"))
load(here("analysis/data/raw_data/gaa_hab_dict.rda"))
gaa_hab_dict %>%
kable(booktabs = T,
align = "cl",
caption = "Globally available attributes and their descriptions used as covariates in the random forest extrapolation model.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
source(here("R/calc_watershed_cap.R"))
# Chinook salmon, summer parr
chnk_sum_cap = calc_watershed_cap(NF_huc_sf,
NF_sum_sf,
capacity_name = "chnk_per_m",
capacity_se_name = "chnk_per_m_se",
by_stream = T)
# Chinook salmon, winter presmolt
chnk_win_cap = calc_watershed_cap(NF_huc_sf,
NF_win_sf,
capacity_name = "chnk_per_m",
capacity_se_name = "chnk_per_m_se",
by_stream = T)
# Chinook salmon, redds
chnk_redd_cap = calc_watershed_cap(NF_huc_sf,
NF_redd_sf,
capacity_name = "chnk_per_m",
capacity_se_name = "chnk_per_m_se",
by_stream = T)
# steelhead, summer parr
sthd_sum_cap = calc_watershed_cap(NF_huc_sf,
NF_sum_sf,
capacity_name = "sthd_per_m",
capacity_se_name = "sthd_per_m_se",
by_stream = T)
# steelhead, winter presmolt
sthd_win_cap = calc_watershed_cap(NF_huc_sf,
NF_win_sf,
capacity_name = "sthd_per_m",
capacity_se_name = "sthd_per_m_se",
by_stream = T)
# steelhead, redds
sthd_redd_cap = calc_watershed_cap(NF_huc_sf,
NF_redd_sf,
capacity_name = "sthd_per_m",
capacity_se_name = "sthd_per_m_se",
by_stream = T)
cap_totals = list(chnk_sum = chnk_sum_cap,
chnk_win = chnk_win_cap,
chnk_redd = chnk_redd_cap,
sthd_sum = sthd_sum_cap,
sthd_win = sthd_win_cap,
sthd_redd = sthd_redd_cap) %>%
map_df(.id = "type",
.f = function(x) {
x %>%
filter(StreamName == "Total")
}) %>%
mutate(Species = str_split(type, "_", simplify = T)[ ,1],
LifeStage = str_split(type, "_", simplify = T)[ ,2],
tot_cap_90CI_L = tot_cap - tot_cap_se*1.65,
tot_cap_90CI_U = tot_cap + tot_cap_se*1.65) %>%
mutate(Species = recode(Species,
"chnk" = "Chinook",
"sthd" = "Steelhead"),
LifeStage = recode(LifeStage,
"sum" = "Summer Juveniles",
"win" = "Winter Juveniles",
"redd" = "Redds")) %>%
select(Species,
LifeStage,
everything(),
-StreamName,
-type)
#Estimating available capacity in terms of spawners
availcap_spawners = tibble(Species = c(rep("Chinook",3), rep("Steelhead",3)),
LifeStage = rep(c("Summer Juveniles","Winter Juveniles","Redds"),2),
LifeStage_Cap = cap_totals$tot_cap,
Pred_Spawners = NA)
#chnk
availcap_spawners$Pred_Spawners[1] = availcap_spawners$LifeStage_Cap[1]/(params$Value[1]*params$Value[2]*params$Value[3]*params$Value[4])
availcap_spawners$Pred_Spawners[2] = availcap_spawners$LifeStage_Cap[2]/(params$Value[1]*params$Value[2]*params$Value[3]*params$Value[4]*params$Value[5])
availcap_spawners$Pred_Spawners[3] = availcap_spawners$LifeStage_Cap[3]/(params$Value[1]*params$Value[2])
#sthd
availcap_spawners$Pred_Spawners[4] = availcap_spawners$LifeStage_Cap[4]/(params$Value[7]*params$Value[8]*params$Value[9]*params$Value[10])
availcap_spawners$Pred_Spawners[5] = availcap_spawners$LifeStage_Cap[5]/(params$Value[7]*params$Value[8]*params$Value[9]*params$Value[10]*params$Value[11])
availcap_spawners$Pred_Spawners[6] = availcap_spawners$LifeStage_Cap[6]/(params$Value[7]*params$Value[8])
cap_totals %>%
mutate(avg_cap_per_m = tot_cap / tot_length) %>%
mutate(tot_length_km = tot_length / 1000,
`90% CI` = paste0("(", round(tot_cap_90CI_L, 0), "-", round(tot_cap_90CI_U, 0),")")) %>%
rename(`n Reaches` = n_rchs,
`Stream Length (km)` = tot_length_km,
Capacity = tot_cap,
SE = tot_cap_se,
`Avg. Capacity / m` = avg_cap_per_m) %>%
select(Species,
LifeStage,
`n Reaches`,
`Stream Length (km)`,
Capacity,
SE,
`90% CI`,
`Avg. Capacity / m`) %>%
kable(booktabs = T,
digits = c(0, 0, 1, 0, 0, 0, 0, 3),
align = "cccccccc",
format.args = list(big.mark = ","),
col.names = c("Species","Life-stage","Reaches","Stream Length (km)", "Capacity","SE", "Capacity 90% CI","Avg. Capacity/m"),
caption = "Estimates of current available watershed capacity by species and life-stage.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
# pick a background river color
river_color = "lightskyblue1"
# chinook summer parr
chnk_sum_map = NF_sum_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_sum_sf %>%
filter(chnk),
aes(color = chnk_per_m2),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Chinook, Summer Juveniles",
color = expression(`Summer Juv` / m^2))
# chinook winter presmolts
chnk_win_map = NF_win_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_win_sf %>%
filter(chnk),
aes(color = chnk_per_m2),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Chinook, Winter Juveniles",
color = expression(`Winter Juv` / m^2))
# chinook redds
chnk_redd_map = NF_redd_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_redd_sf %>%
filter(chnk) %>%
mutate(chnk_per_km = chnk_per_m * 1000),
aes(color = chnk_per_km),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Chinook, Redds",
color = expression(Redds / km))
# steelhead summer juveniles
sthd_sum_map = NF_sum_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_sum_sf %>%
filter(sthd),
aes(color = sthd_per_m2),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Steelhead, Summer Juveniles",
color = expression(`Summer Juv` / m^2))
# steelhead winter juveniles
sthd_win_map = NF_win_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_win_sf %>%
filter(sthd),
aes(color = sthd_per_m2),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Steelhead, Winter Juveniles",
color = expression(`Winter Juv` / m^2))
# steelhead redds
sthd_redd_map = NF_redd_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_redd_sf %>%
filter(sthd) %>%
mutate(sthd_per_km = sthd_per_m * 1000),
aes(color = sthd_per_km),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Steelhead, Redds",
color = expression(Redds / km))
ggarrange(chnk_sum_map,
chnk_win_map,
chnk_redd_map)
ggarrange(sthd_sum_map,
sthd_win_map,
sthd_redd_map)
