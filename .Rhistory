align = "lcccc",
format.args = list(big.mark = ",",
drop0trailing = T),
caption = "Life history parameters for the generalized capacity model.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
rec_goals %>%
mutate(`90% CI` = paste0("(",round(`90% CI, lower`,0),"-",round(`90% CI, upper`,0),")")) %>%
select(-`90% CI, lower`, -`90% CI, upper`) %>%
kable(booktabs = T,
digits = 0,
align = "ccccc",
format.args = list(big.mark = ",",
drop0trailing = T),
col.names = c("Species", "Scenario","Life-stage","Abundance", "Abundance SE", "90% CI"),
caption = "Life-stage specific habitat capacity requirement estimates necessary to achieve given escapement recovery goals.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
load(here("analysis/data/raw_data/QRF_new_hab_cov_tbl.rda"))
QRF_new_hab_cov_tbl %>%
select(-Covariate) %>%
kable(booktabs = T,
align = "ccccccccl",
caption = "Habitat covariates and their descriptions used in each of the QRF capacity models. Numbers indicate where each metric ranked in relative importance for each model. Dots indicate a metric was not used for a given model.") %>%
kable_styling(position = "center",
bootstrap_options = c("striped", "condensed"))
load(here("analysis/data/raw_data/gaa_hab_dict.rda"))
gaa_hab_dict %>%
kable(booktabs = T,
align = "cl",
caption = "Globally available attributes and their descriptions used as covariates in the random forest extrapolation model.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
source(here("R/calc_watershed_cap.R"))
# Chinook salmon, summer parr
chnk_sum_cap = calc_watershed_cap(NF_huc_sf,
NF_sum_sf,
capacity_name = "chnk_per_m",
capacity_se_name = "chnk_per_m_se",
by_stream = T)
# Chinook salmon, winter presmolt
chnk_win_cap = calc_watershed_cap(NF_huc_sf,
NF_win_sf,
capacity_name = "chnk_per_m",
capacity_se_name = "chnk_per_m_se",
by_stream = T)
# Chinook salmon, redds
chnk_redd_cap = calc_watershed_cap(NF_huc_sf,
NF_redd_sf,
capacity_name = "chnk_per_m",
capacity_se_name = "chnk_per_m_se",
by_stream = T)
# steelhead, summer parr
sthd_sum_cap = calc_watershed_cap(NF_huc_sf,
NF_sum_sf,
capacity_name = "sthd_per_m",
capacity_se_name = "sthd_per_m_se",
by_stream = T)
# steelhead, winter presmolt
sthd_win_cap = calc_watershed_cap(NF_huc_sf,
NF_win_sf,
capacity_name = "sthd_per_m",
capacity_se_name = "sthd_per_m_se",
by_stream = T)
# steelhead, redds
sthd_redd_cap = calc_watershed_cap(NF_huc_sf,
NF_redd_sf,
capacity_name = "sthd_per_m",
capacity_se_name = "sthd_per_m_se",
by_stream = T)
cap_totals = list(chnk_sum = chnk_sum_cap,
chnk_win = chnk_win_cap,
chnk_redd = chnk_redd_cap,
sthd_sum = sthd_sum_cap,
sthd_win = sthd_win_cap,
sthd_redd = sthd_redd_cap) %>%
map_df(.id = "type",
.f = function(x) {
x %>%
filter(StreamName == "Total")
}) %>%
mutate(Species = str_split(type, "_", simplify = T)[ ,1],
LifeStage = str_split(type, "_", simplify = T)[ ,2],
tot_cap_90CI_L = tot_cap - tot_cap_se*1.65,
tot_cap_90CI_U = tot_cap + tot_cap_se*1.65) %>%
mutate(Species = recode(Species,
"chnk" = "Chinook",
"sthd" = "Steelhead"),
LifeStage = recode(LifeStage,
"sum" = "Summer Juveniles",
"win" = "Winter Juveniles",
"redd" = "Redds")) %>%
select(Species,
LifeStage,
everything(),
-StreamName,
-type)
#Estimating available capacity in terms of spawners
availcap_spawners = tibble(Species = c(rep("Chinook",3), rep("Steelhead",3)),
LifeStage = rep(c("Summer Juveniles","Winter Juveniles","Redds"),2),
LifeStage_Cap = cap_totals$tot_cap,
Pred_Spawners = NA)
#chnk
availcap_spawners$Pred_Spawners[1] = availcap_spawners$LifeStage_Cap[1]/(params$Value[1]*params$Value[2]*params$Value[3]*params$Value[4])
availcap_spawners$Pred_Spawners[2] = availcap_spawners$LifeStage_Cap[2]/(params$Value[1]*params$Value[2]*params$Value[3]*params$Value[4]*params$Value[5])
availcap_spawners$Pred_Spawners[3] = availcap_spawners$LifeStage_Cap[3]/(params$Value[1]*params$Value[2])
#sthd
availcap_spawners$Pred_Spawners[4] = availcap_spawners$LifeStage_Cap[4]/(params$Value[7]*params$Value[8]*params$Value[9]*params$Value[10])
availcap_spawners$Pred_Spawners[5] = availcap_spawners$LifeStage_Cap[5]/(params$Value[7]*params$Value[8]*params$Value[9]*params$Value[10]*params$Value[11])
availcap_spawners$Pred_Spawners[6] = availcap_spawners$LifeStage_Cap[6]/(params$Value[7]*params$Value[8])
cap_totals %>%
mutate(avg_cap_per_m = tot_cap / tot_length) %>%
mutate(tot_length_km = tot_length / 1000,
`90% CI` = paste0("(", round(tot_cap_90CI_L, 0), "-", round(tot_cap_90CI_U, 0),")")) %>%
rename(`n Reaches` = n_rchs,
`Stream Length (km)` = tot_length_km,
Capacity = tot_cap,
SE = tot_cap_se,
`Avg. Capacity / m` = avg_cap_per_m) %>%
select(Species,
LifeStage,
`n Reaches`,
`Stream Length (km)`,
Capacity,
SE,
`90% CI`,
`Avg. Capacity / m`) %>%
kable(booktabs = T,
digits = c(0, 0, 1, 0, 0, 0, 0, 3),
align = "cccccccc",
format.args = list(big.mark = ","),
col.names = c("Species","Life-stage","Reaches","Stream Length (km)", "Capacity","SE", "Capacity 90% CI","Avg. Capacity/m"),
caption = "Estimates of current available watershed capacity by species and life-stage.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
# pick a background river color
river_color = "lightskyblue1"
# chinook summer parr
chnk_sum_map = NF_sum_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_sum_sf %>%
filter(chnk),
aes(color = chnk_per_m2),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Chinook, Summer Juveniles",
color = expression(`Summer Juv` / m^2))
# chinook winter presmolts
chnk_win_map = NF_win_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_win_sf %>%
filter(chnk),
aes(color = chnk_per_m2),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Chinook, Winter Juveniles",
color = expression(`Winter Juv` / m^2))
# chinook redds
chnk_redd_map = NF_redd_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_redd_sf %>%
filter(chnk) %>%
mutate(chnk_per_km = chnk_per_m * 1000),
aes(color = chnk_per_km),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Chinook, Redds",
color = expression(Redds / km))
# steelhead summer juveniles
sthd_sum_map = NF_sum_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_sum_sf %>%
filter(sthd),
aes(color = sthd_per_m2),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Steelhead, Summer Juveniles",
color = expression(`Summer Juv` / m^2))
# steelhead winter juveniles
sthd_win_map = NF_win_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_win_sf %>%
filter(sthd),
aes(color = sthd_per_m2),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Steelhead, Winter Juveniles",
color = expression(`Winter Juv` / m^2))
# steelhead redds
sthd_redd_map = NF_redd_sf %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union() %>%
nngeo::st_remove_holes(),
fill = NA,
color = "gray50") +
geom_sf(color = river_color) +
geom_sf(data = NF_redd_sf %>%
filter(sthd) %>%
mutate(sthd_per_km = sthd_per_m * 1000),
aes(color = sthd_per_km),
size = 1) +
scale_color_viridis_c(direction = -1) +
#theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Steelhead, Redds",
color = expression(Redds / km))
ggarrange(chnk_sum_map,
chnk_win_map,
chnk_redd_map)
ggarrange(sthd_sum_map,
sthd_win_map,
sthd_redd_map)
rec_goals %>%
left_join(cap_totals %>%
select(-n_rchs,
-tot_length)) %>%
filter(LifeStage != "Smolts") %>%
mutate(Deficit = Abundance - tot_cap,
`Relative Deficit` = Deficit / tot_cap) %>%
rename(`Required Capacity` = Abundance,
`Available Capacity` = tot_cap,
`Capacity SE` = tot_cap_se) %>%
select(-tot_cap_90CI_U, -tot_cap_90CI_L, -`90% CI, lower`, -`90% CI, upper`) %>%
kable(booktabs = T,
digits = c(0,0,0,0,0,0,0,0,2),
align = "cccccccccccc",
format.args = list(big.mark = ","),
col.names = c("Species","Scenario","Life-stage","Required Capacity", "Required Capacity SE","Available Capacity","Available Capacity SE","Deficit","Relative Deficit"),
caption = "Capacity deficits and relative deficits based on recovery goals.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
chnk_def_p = rec_goals %>%
select(-Scenario) %>%
filter(Species == "Chinook",
LifeStage %in% c("Redds",
"Summer Juveniles",
"Winter Juveniles")) %>%
left_join(cap_totals %>%
select(-n_rchs,
-tot_length)) %>%
select(!Species) %>%
rename(Required = Abundance,
Available = tot_cap,
se = tot_cap_se) %>%
pivot_longer(cols = c("Required",
"Available")) %>%
mutate(std.error = ifelse(name == "Required", SE, se),
cap_90CI_L = ifelse(name == "Required", `90% CI, lower`, tot_cap_90CI_L),
cap_90CI_U = ifelse(name == "Required", `90% CI, upper`, tot_cap_90CI_U)) %>%
select(LifeStage, name, value, std.error, cap_90CI_L, cap_90CI_U) %>%
ggplot() +
geom_bar(aes(x = name,
y = value,
fill = name),
color = "black",
stat = "identity") +
scale_x_discrete(limits = rev) +
scale_fill_manual(name = "Capacity",
values = c("gray30", "forestgreen")) +
coord_flip() +
facet_wrap(~ LifeStage,
scales = "free",
ncol = 1,
strip.position = "left",
labeller = labeller(LifeStage = label_wrap_gen(width = 10))) +
geom_errorbar(aes(x = name,
ymin = cap_90CI_L,
ymax = cap_90CI_U),
width = 0.3,
size = 0.5) +
scale_y_continuous(labels = scales::comma,
expand = c(0,0)) +
labs(title = "Chinook salmon") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 8,
color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
strip.text.y = element_text(size = 10),
plot.title = element_text(size = 12,
face = "bold"),
legend.position = "right")
chnk_def_p
sthd_def_p = rec_goals %>%
select(-Scenario) %>%
filter(Species == "Steelhead",
LifeStage %in% c("Redds",
"Summer Juveniles",
"Winter Juveniles")) %>%
left_join(cap_totals %>%
select(-n_rchs,
-tot_length)) %>%
select(!Species) %>%
rename(Required = Abundance,
Available = tot_cap,
se = tot_cap_se) %>%
pivot_longer(cols = c("Required",
"Available")) %>%
mutate(std.error = ifelse(name == "Required", SE, se),
cap_90CI_L = ifelse(name == "Required", `90% CI, lower`, tot_cap_90CI_L),
cap_90CI_U = ifelse(name == "Required", `90% CI, upper`, tot_cap_90CI_U)) %>%
select(LifeStage, name, value, std.error, cap_90CI_L, cap_90CI_U) %>%
ggplot() +
geom_bar(aes(x = name,
y = value,
fill = name),
color = "black",
stat = "identity") +
scale_x_discrete(limits = rev) +
scale_fill_manual(name = "Capacity",
values = c("gray30", "dodgerblue3")) +
coord_flip() +
facet_wrap(~ LifeStage,
scales = "free",
ncol = 1,
strip.position = "left",
labeller = labeller(LifeStage = label_wrap_gen(width = 10))) +
geom_errorbar(aes(x = name,
ymin = cap_90CI_L,
ymax = cap_90CI_U),
width = 0.3,
size = 0.5) +
scale_y_continuous(labels = scales::comma,
expand = c(0,0)) +
labs(title = "Steelhead") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 8,
color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
strip.text.y = element_text(size = 10),
plot.title = element_text(size = 12,
face = "bold"),
legend.position = "right")
sthd_def_p
availcap_spawners %>%
#rename(`life-stage` = LifeStage,
#       `Available Capacity` = LifeStage_Cap,
#       `Predicted Spawners` = Pred_Spawners) %>%
kable(booktabs = T,
digits = c(0,0,0,0),
align = "cccc",
format.args = list(big.mark = ","),
col.names = c("Species","Life-stage","Available Capacity","Predicted Spawners"),
caption = "Estimated capacity by life-stage and the predicted abundance of spawners supported.") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
river_color = "lightskyblue1"
norwest_df = NF_rch_sf %>%
select(S2_02_11,
S30_2040D,
S32_2080D) %>%
mutate(S2_02_11 = replace(S2_02_11, S2_02_11 == -9999.00, NA),
S30_2040D = replace(S30_2040D, S30_2040D == -9999.00, NA),
S32_2080D = replace(S32_2080D, S32_2080D == -9999.00, NA)) %>%
rename(`Recent Mean` = S2_02_11,
`2040 Projected` = S30_2040D,
`2080 Projected` = S32_2080D) %>%
pivot_longer(cols = c("Recent Mean",
"2040 Projected",
"2080 Projected"),
names_to = "scenario",
values_to = "temp_c") %>%
mutate(scenario = factor(scenario, levels = c("Recent Mean",
"2040 Projected",
"2080 Projected")))
norwest_p = norwest_df %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union(),
fill = NA,
color = "gray50",
size = 0.5) +
geom_sf(color = river_color) +
geom_sf(data = norwest_df,
aes(color = temp_c),
size = 0.5) +
scale_color_viridis_c(option = "turbo") +
facet_wrap(~ scenario,
ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_line(color = "transparent")) +
labs(title = "NorWeST Stream Temperature Predictions",
color = expression("Temperature ("^o*"C)"))
norwest_p
temp_thresh_tab = tibble(Species = c("Chinook", "Chinook", "Steelhead"),
`life-stage` = c("Spawning", "Summer Rearing", "Summer Rearing"),
Timing = c("8/10 - 9/30", "6/10 - 10/15", "6/10 - 10/15"),
Minimum = c("3.3", "4.5", "4.5"),
Optimum = c("7.2-14.5", "10-16", "10-18"),
Maximum = c("18", "20", "19"),
Acute = c("20", "22", "22")) %>%
kable(booktabs = T,
align = "ccccccc",
caption = "life-stage timing, and minimum, optimum, maximum, and acute temperature (Celcius) thresholds for summer life-stages of Chinook salmon and steelhead, adopted from Carter (2005). All temperatures are expressed as the 7-day Maximum Weekly Maximum Temperature (MWMT).") %>%
kable_styling(full_width = F,
position = "center",
bootstrap_options = c("striped", "condensed"))
temp_thresh_tab
thresh_df = norwest_df %>%
mutate(`Chinook Spawning` = ifelse(temp_c > 14.5, T, F),
`Chinook Rearing` = ifelse(temp_c > 16, T, F),
`Steelhead Rearing` = ifelse(temp_c > 18, T, F)) %>%
pivot_longer(cols = c("Chinook Spawning",
"Chinook Rearing",
"Steelhead Rearing"),
names_to = "spec_ls",
values_to = "above_optimum") %>%
mutate(above_optimum = replace_na(above_optimum, F)) %>%
# get reach length
st_join(NF_rch_sf %>%
select(geometry,
reach_leng))
thresh_p = thresh_df %>%
ggplot() +
geom_sf(data = NF_huc_sf %>%
st_union(),
fill = NA,
color = "gray50",
size = 0.5) +
#geom_sf(color = river_color) +
geom_sf(data = thresh_df,
aes(color = above_optimum),
size = 0.5) +
scale_color_manual(values = c("FALSE" = river_color,
"TRUE" = "red")) +
facet_grid(spec_ls ~ scenario) +
theme_bw() +
theme(legend.position = "top",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_line(color = "transparent")) +
labs(color = "Above Optimum Temperature")
thresh_p
dash_df = readRDS(here("analysis/data/derived_data/dash_hr_18-21.rds"))
View(dash_df)
